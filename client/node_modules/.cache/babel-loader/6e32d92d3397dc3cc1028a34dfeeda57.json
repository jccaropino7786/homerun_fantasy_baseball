{"ast":null,"code":"/**\n * React Router v6.11.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_getPathContributingMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, isRouteErrorResponse, createMemoryHistory, stripBasename, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\n\nconst LocationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\n\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\n\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\n\n\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname; // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\n\n\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\n\n\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\n\n\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\n\n\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\"; // Mute warnings for calls to useNavigate in SSR environments\n\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\n\n\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext); // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0; // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n\n    if (!activeRef.current) return;\n\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\"); // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history.  If this is a root navigation, then we\n    // navigate to the raw basename which allows the basename to have full\n    // control over the presence of a trailing slash on root links\n\n    if (basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname]);\n  return navigate;\n}\n\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\n\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\n\n\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n\n  return outlet;\n}\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\n\n\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\n\n\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\n\n\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n} // Internal implementation with accept optional param for RouterProvider usage\n\n\nfunction useRoutesImpl(routes, locationArg, dataRouterState) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n\n  let locationFromContext = useLocation();\n  let location;\n\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase, // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase, // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState); // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n\n\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\n\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\n\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    } // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n\n\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    return this.state.error ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n\n}\n\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext); // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\n\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  var _dataRouterState2;\n\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n\n  if (matches == null) {\n    var _dataRouterState;\n\n    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches; // If we have data errors, trim matches to the highest error boundary\n\n  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;\n\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null; // Only data routers handle errors\n\n    let errorElement = null;\n\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n\n    let getChildren = () => {\n      let children;\n\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    }; // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n\n\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\n\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nvar DataRouterStateHook;\n\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n} // Internal version with hookName-aware debugging\n\n\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n/**\n * Returns the ID for the nearest contextual route\n */\n\n\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\n\n\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\n\n\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  };\n}\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\n\n\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(match => {\n    let {\n      pathname,\n      params\n    } = match; // Note: This structure matches that created by createUseMatchesMatch\n    // in the @remix-run/router , so if you change this please also change\n    // that :)  Eventually we'll DRY this up\n\n    return {\n      id: match.route.id,\n      pathname,\n      params,\n      data: loaderData[match.route.id],\n      handle: match.route.handle\n    };\n  }), [matches, loaderData]);\n}\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\n\n\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n\n  return state.loaderData[routeId];\n}\n/**\n * Returns the loaderData for the given routeId\n */\n\n\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n/**\n * Returns the action data for the nearest ancestor Route action\n */\n\n\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useActionData must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n}\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\n\n\nfunction useRouteError() {\n  var _state$errors;\n\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError); // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n\n  if (error) {\n    return error;\n  } // Otherwise look for errors from our data router state\n\n\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\n\n\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\n\n\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\n\nlet blockerId = 0;\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\n\nfunction useBlocker(shouldBlock) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey] = React.useState(() => String(++blockerId));\n  let blockerFunction = React.useCallback(args => {\n    return typeof shouldBlock === \"function\" ? !!shouldBlock(args) : !!shouldBlock;\n  }, [shouldBlock]);\n  let blocker = router.getBlocker(blockerKey, blockerFunction); // Cleanup on unmount\n\n  React.useEffect(() => () => router.deleteBlocker(blockerKey), [router, blockerKey]); // Prefer the blocker from state since DataRouterContext is memoized so this\n  // ensures we update on blocker state updates\n\n  return state.blockers.get(blockerKey) || blocker;\n}\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\n\n\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0; // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n\n    if (!activeRef.current) return;\n\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\n\nconst alreadyWarned = {};\n\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\n\n\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router\n  } = _ref; // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n\n  let [state, setState] = React.useState(router.state);\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]); // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: router.basename,\n    location: router.state.location,\n    navigationType: router.state.historyAction,\n    navigator: navigator\n  }, router.state.initialized ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  }) : fallbackElement))), null);\n}\n\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state);\n}\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\n\n\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex\n  } = _ref3;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\n\n\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!React.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate(); // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n\n  let path = resolveTo(to, UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\n\n\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\n\n\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false);\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\n\n\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0; // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\n\n\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\n\n\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\n\nvar AwaitRenderStatus;\n\n(function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n})(AwaitRenderStatus || (AwaitRenderStatus = {}));\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    } // Throw to the suspense boundary\n\n\n    throw promise;\n  }\n\n}\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\n\n\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\n\n\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n\n    routes.push(route);\n  });\n  return routes;\n}\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\n\n\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n\n  return updates;\n}\n\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties\n  }).initialize();\n} ///////////////////////////////////////////////////////////////////////////////\n\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useBlocker as unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };","map":{"version":3,"sources":["../lib/context.ts","../lib/hooks.tsx","../lib/components.tsx","../index.ts"],"names":["DataRouterContext","React","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","matches","isDataRoute","RouteErrorContext","relative","useInRouterContext","navigator","search","useResolvedPath","joinedPathname","basename","pathname","joinPaths","hash","useLocation","matchPath","navigateEffectWarning","isStatic","useNavigateStable","useNavigateUnstable","locationPathname","routePathnamesJson","JSON","getPathContributingMatches","match","activeRef","useIsomorphicLayoutEffect","navigate","options","path","resolveTo","OutletContext","context","routeMatch","useRoutesImpl","parentMatches","parentParams","parentPathname","parentPathnameBase","parentRoute","parentPath","warningOnce","locationFromContext","parsedLocationArg","parsePath","location","remainingPathname","matchRoutes","renderedMatches","_renderMatches","params","Object","pathnameBase","locationArg","state","key","navigationType","NavigationType","Pop","error","useRouteError","message","isRouteErrorResponse","stack","lightgrey","preStyles","padding","backgroundColor","codeStyles","devInfo","console","fontStyle","defaultErrorElement","constructor","props","revalidation","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","render","routeContext","component","children","dataRouterContext","dataRouterState","errors","errorIndex","m","Math","errorElement","index","getChildren","DataRouterHook","DataRouterStateHook","hookName","ctx","getDataRouterConsoleError","route","useRouteContext","thisRoute","useCurrentRouteId","useDataRouterState","useDataRouterContext","revalidate","loaderData","id","data","handle","routeId","value","blockerId","router","String","blockerFunction","args","shouldBlock","blocker","fromRouteId","alreadyWarned","createHref","encodeLocation","go","n","push","preventScrollReset","opts","replace","static","initialIndex","historyRef","createMemoryHistory","v5Compat","history","action","useNavigate","jsonPath","useOutlet","invariant","basenameProp","staticProp","navigationContext","locationProp","locationContext","trailingPathname","stripBasename","useRoutes","createRoutesFromChildren","resolve","AwaitRenderStatus","neverSettledPromise","promise","status","Promise","get","renderError","useAsyncValue","toRender","routes","treePath","element","caseSensitive","Component","loader","ErrorBoundary","hasErrorBoundary","shouldRevalidate","lazy","updates","undefined","future","v7_prependBasename","initialEntries","hydrationData","mapRouteProperties"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history.  If this is a root navigation, then we\n      // navigate to the raw basename which allows the basename to have full\n      // control over the presence of a trailing slash on root links\n      if (basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey] = React.useState(() => String(++blockerId));\n\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (args) => {\n      return typeof shouldBlock === \"function\"\n        ? !!shouldBlock(args)\n        : !!shouldBlock;\n    },\n    [shouldBlock]\n  );\n\n  let blocker = router.getBlocker(blockerKey, blockerFunction);\n\n  // Cleanup on unmount\n  React.useEffect(\n    () => () => router.deleteBlocker(blockerKey),\n    [router, blockerKey]\n  );\n\n  // Prefer the blocker from state since DataRouterContext is memoized so this\n  // ensures we update on blocker state updates\n  return state.blockers.get(blockerKey) || blocker;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  To,\n  LazyRouteFunction,\n  RelativeRoutingType,\n  RouterState,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n  useRoutesImpl,\n  useLocation,\n} from \"./hooks\";\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n}: RouterProviderProps): React.ReactElement {\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setState] = React.useState(router.state);\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={router.basename}\n            location={router.state.location}\n            navigationType={router.state.historyAction}\n            navigator={navigator}\n          >\n            {router.state.initialized ? (\n              <DataRoutes routes={router.routes} state={state} />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getPathContributingMatches(matches).map((match) => match.pathnameBase),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import * as React from \"react\";\nimport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  Blocker,\n  BlockerFunction,\n  Fetcher,\n  HydrationState,\n  JsonFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  PathPattern,\n  RedirectFunction,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  ShouldRevalidateFunction,\n  To,\n  InitialEntry,\n  LazyRouteFunction,\n  FutureConfig,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  resolvePath,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  AwaitProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps,\n  RouterProviderProps,\n} from \"./lib/components\";\nimport {\n  createRoutesFromChildren,\n  renderMatches,\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n} from \"./lib/components\";\nimport type {\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NavigateOptions,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./lib/context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type { NavigateFunction } from \"./lib/hooks\";\nimport {\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigationType,\n  useNavigate,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useRouteId,\n  useLoaderData,\n  useMatches,\n  useNavigation,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutesImpl,\n} from \"./lib/hooks\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker as unstable_Blocker,\n  BlockerFunction as unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n};\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker as unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nfunction mapRouteProperties(route: RouteObject) {\n  let updates: Partial<RouteObject> & { hasErrorBoundary: boolean } = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null,\n  };\n\n  if (route.Component) {\n    if (__DEV__) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - \" +\n            \"`Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React.createElement(route.Component),\n      Component: undefined,\n    });\n  }\n\n  if (route.ErrorBoundary) {\n    if (__DEV__) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" +\n            \"`ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined,\n    });\n  }\n\n  return updates;\n}\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    future?: Partial<Omit<FutureConfig, \"v7_prependBasename\">>;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext,\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  mapRouteProperties as UNSAFE_mapRouteProperties,\n  useRouteId as UNSAFE_useRouteId,\n  useRoutesImpl as UNSAFE_useRoutesImpl,\n};\n"]},"metadata":{},"sourceType":"module"}