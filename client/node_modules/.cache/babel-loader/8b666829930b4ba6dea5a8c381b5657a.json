{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialStateValues = {\n  coin: 0\n};\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialStateValues,\n  reducers: {\n    increment: state => {\n      state.coin += 1;\n    },\n    decrement: state => {\n      state.count -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.count += action.payload;\n    },\n    decrementByAmount: (state, action) => {\n      state.count -= action.payload;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  increment,\n  decrement,\n  incrementByAmount,\n  decrementByAmount\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"sources":["/Users/johncaropino/Desktop/current work/Dylan and JC project/homerun_fantasy_baseball/client/src/redux/counterSlice.js"],"names":["createSlice","initialStateValues","coin","counterSlice","name","initialState","reducers","increment","state","decrement","count","incrementByAmount","action","payload","decrementByAmount","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,IAAI,EAAE;AADmB,CAA3B;AAIA,OAAO,MAAMC,YAAY,GAAGH,WAAW,CAAC;AACtCI,EAAAA,IAAI,EAAE,SADgC;AAEtCC,EAAAA,YAAY,EAAEJ,kBAFwB;AAGtCK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAGC,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACN,IAAN,IAAc,CAAd;AACD,KAHO;AAIRO,IAAAA,SAAS,EAAGD,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACE,KAAN,IAAe,CAAf;AACD,KANO;AAORC,IAAAA,iBAAiB,EAAE,CAACH,KAAD,EAAQI,MAAR,KAAmB;AACpCJ,MAAAA,KAAK,CAACE,KAAN,IAAeE,MAAM,CAACC,OAAtB;AACD,KATO;AAURC,IAAAA,iBAAiB,EAAE,CAACN,KAAD,EAAQI,MAAR,KAAmB;AACpCJ,MAAAA,KAAK,CAACE,KAAN,IAAcE,MAAM,CAACC,OAArB;AACD;AAZO;AAH4B,CAAD,CAAhC,C,CAmBP;;AACA,OAAO,MAAM;AAAEN,EAAAA,SAAF;AAAaE,EAAAA,SAAb;AAAwBE,EAAAA,iBAAxB;AAA2CG,EAAAA;AAA3C,IAAiEX,YAAY,CAACY,OAApF;AAEP,eAAeZ,YAAY,CAACa,OAA5B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialStateValues = {\n  coin: 0,\n}\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialStateValues,\n  reducers: {\n    increment: (state) => {\n      state.coin += 1\n    },\n    decrement: (state) => {\n      state.count -= 1\n    },\n    incrementByAmount: (state, action) => {\n      state.count += action.payload\n    },\n    decrementByAmount: (state, action) => {\n      state.count -=action.payload\n    }\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { increment, decrement, incrementByAmount, decrementByAmount } = counterSlice.actions\n\nexport default counterSlice.reducer"]},"metadata":{},"sourceType":"module"}